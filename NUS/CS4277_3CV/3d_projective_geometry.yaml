title: 3D Projective Geometry
author: Hugo Melder
id: 457893457345
cards:
- type: markdown
  id: 0  # (generated)
  front: |
    How are 3-space planes written in euclidean coordinates?
  back: |
    [$$]\pi_1X + \pi_2Y + \pi_3Z + \pi_4 = 0[/$$]
- type: markdown
  id: 1  # (generated)
  front: |
    How are 3-space planes written in HC?
  back: |
    [$](\pi_1, \pi_2, \pi_3, \pi_4)^T[/$]
- type: markdown
  id: 2  # (generated)
  front: |
    How does a plane transform under a point transformation [$]X' = HX[/$]?
  back: |
    [$$]\pi' = H^{-T}\pi[/$$]
- type: markdown
  id: 3  # (generated)
  front: |
    What is the point-plane duality?
  back: |
    Three points define a plane, and three planes define a point.
# TODO: Lines in P3

- type: markdown
  id: 22  # (generated)
  front: |
    How does a line transform under a point transformation [$]X' = HX[/$]?
  back: |
    [$$]l' = H^{-T}l[/$$] or [$$]l^{T'} = l^TH^{-1}[/$$]

# Quadrics

- type: markdown
  id: 4  # (generated)
  front: |
    How are quadrics defined in [$]P^3[/$]?
  back: |
    A quadric is a **surface** defined by [$$]X^TQX = 0[/$$], where Q is a
    **symmetric 4x4 matrix**.
- type: markdown
  id: 5  # (generated)
  front: |
    How many DOF does a quadric have?
  back: |
    9
- type: markdown
  id: 6  # (generated)
  front: |
    How many points in general position define a quadric?
  back: |
    9
- type: markdown
  id: 7  # (generated)
  front: |
    What happens if quadric Q is singular?
  back: |
    The quadric is degenerate
- type: markdown
  id: 8  # (generated)
  front: |
    How does a quadric transform under a point transformation [$]X' = HX[/$]
  back: |
    [$$]Q' = H^{-T}QH^{-1}[/$$]
- type: markdown
  id: 9  # (generated)
  front: |
    Is the **dual of a quadric** also a quadric?
  back: |
    Yes.
- type: markdown
  id: 10  # (generated)
  front: |
    What are dual quadrics?
  back: |
    **Equations on planes**: the tangent planes [$]\pi[/$] to the point quadric Q satisfy [$]\pi^TQ^*\pi = 0[/$].
- type: markdown
  id: 11  # (generated)
  front: |
    How does a dual quadric transform under a point transformation [$]X' = HX[/$]?
  back: |
    [$$]Q^{\*'} = HQ^\*H^T[/$$]

# TODO: Adjoint and Minor of a Matrix

- type: markdown
  id: 12  # (generated)
  front: |
    What are invariant properties of the *projective* transformation group?
  back: |-
    Intersection and tangency of surfaces in contact
- type: markdown
  id: 23  # (generated)
  front: |
    What are invariant properties of the *affine* transformation group?
  back: |-
    Parallelism of planes, volume ratios, centroids, **plane at infinity**
- type: markdown
  id: 24  # (generated)
  front: |
    What are invariant properties of the *similarity* transformation group?
  back: |-
    Absolute conic
- type: markdown
  id: 25  # (generated)
  front: |
    What are invariant properties of the *euclidean* transformation group?
  back: |-
    Volume

# Line at Infinity and Circular Points

- type: cloze
  id: 13  # (generated)
  front: |
    The **projective distortion** may be **removed** once {{c1:: the vanishing line }} is specified.
- type: cloze
  id: 14  # (generated)
  front: |
    The **affine distortion** may be **removed** once the projective distortion
    is removed, and the {{c1:: image of the circular points }} is specified.
- type: markdown
  id: 15  # (generated)
  front: |
    What remains when both **projective** and **affine** distortion were removed from the image?
  back: |
    Similarity distortion
- type: markdown
  id: 16  # (generated)
  front: |
    True or False? The line at infinity is guaranteed to stay at infinity after a projective transformation?
  back: |
    False

# Decomposition of a Projective Transformation (Chap. 1)

- type: cloze
  id: 26  # (generated)
  front: |
    A projective transformation can be decomposed into a {{c1: chain of transformations}}
- type: markdown
  id: 27  # (generated)
  front: |
    What is the decomposition of a projective transformation in pure-projective, affine, and similarity matrices?
  back: |
    [$$]H = H_S H_A H_P = \begin{bmatrix}sR & t \\\ \bold{0}^T & 1\end{bmatrix} \begin{bmatrix} K & \bold{0} \\\ \bold{0}^T & 1\end{bmatrix} \begin{bmatrix} I & \bold{0} \\\ \bold{v}^T & v \end{bmatrix} = \begin{bmatrix} A & t \\\ v^T & v \end{bmatrix}[/$$]

# Recovery of Affine Properties from Images

## From two parallel lines

- type: markdown
  id: 17  # (generated)
  front: |
    How is the **imaged vanishing line of the plane** l computed?

    [[image: vanishing_line_recovery.png]]
  back: |
    From the intersection of two sets of *imaged* parallel lines.
- type: markdown
  id: 18  # (generated)
  front: |
    How does the **recovery** of *affine properties* of an image work?
  back: |
    1. The **imaged vanishing line of the plane** is computed from the
    intersection of two sets of *imaged* parallel lines.
    2. Compute [$]H_p' = H_A H_P^{-1}[/$], by choosing an aribitrary affinity [$]H_A[/$]

## Computing a vanshing point from a length ratio
# TODO: improve
- type: markdown
  id: 19  # (generated)
  front: |
    How to compute a vanishing point from a length ratio?
  back: |
    1. Measure the **distance ratio in the image** [$]d(\bold{a}', \bold{b}') : d(\bold{b}', \bold{c}') = a' : b'[/$]
    2. Represent [$]\bold{a}, \bold{b}, \bold{c}[/$] are represented as
    coordinates [$](0, 1)^T, (a, 1)^T, (a + b, 1)^T[/$] in a coordinate frame on
    the line [$]\langle \bold{a}, \bold{b}, \bold{c} \rangle[/$]. Similarly for
    [$]\langle \bold{a}', \bold{b}', \bold{c}' \rangle[/$]
    3. *Relative* to these coordinate frames, compute the 1D projective
    transformation [$]H_{2 \times 2}[/$] mapping
    [$]\bold{a} \mapsto \bold{a}', \\ \bold{b} \mapsto \bold{b}', \\ \bold{c} \mapsto \bold{c}'[/$]
    4. The **image of the point at infinity** under [$]H_{2 \times 2}[/$] is the vanishing point on the line [$]\langle \bold{a}', \bold{b}', \bold{c}' \rangle[/$]

# Angles on the Projective Plane
- type: cloze
  id: 20 # (generated)
  front: |
    Once the image of the dual degenerate conic is identified on the projective plane, {{c1: euclidean angles}} can be messured.

# Metric rectification using the dual degenerate conic
- type: cloze
  id: 21  # (generated)
  front: |-
    Once the image of the dual degenerate conic is identified on the projective plane then projective distortion may be rectified up to a {{c1: similarity}}
