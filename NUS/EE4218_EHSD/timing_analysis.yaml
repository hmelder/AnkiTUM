title: Timing Analysis
author: Hugo Melder
id: 2358623482238
cards:
# Questions about flipflop timing
- type: markdown
  id: 0  # (generated)
  front: |
    What is the Clk to output [$]Q[/$] propagation delay ([$]t_{CQ}[/$])?

    [[image: timing_flipflop.png]]
  back: |
    The time for output to change, following the launching clock edge.
    -> Propagation delay of the launching FF
- type: markdown
  id: 1  # (generated)
  front: |
    What is the setup time ([$]t_\text{setup}[/$])?

    [[image: timing_flipflop.png]]
  back: |
    The time for which the data (D) has to be stable before the capture clock
    edge to ensure reliable capture of data.
- type: markdown
  id: 2  # (generated)
  front: |
    What is the hold time ([$]t_\text{hold}[/$])?

    [[image: timing_flipflop.png]]
  back: |
    The time for which the data (D) has to be stable after the capture clock
    edge to *ensure reliable capture of data*.
- type: markdown
  id: 3  # (generated)
  front: |
    What happens if there is a change in D during aperture time `Aperature time = setup time + hold time`?
  back: |
    FF might go into metastability.
- type: markdown
  id: 4  # (generated)
  front: |
    What is clock skew ([$]\delta\text{skew}[/$])
  back: |
    Additional time required for the clock to reach the capture FF relative to the launching FF.
    - Positive skew: Clock reaches the capture FF later than the launching FF
- type: markdown
  id: 5  # (generated)
  front: |
    What is the arrival time [$]\text{arrival time} = t_{CQ} + t_\text{logic\_max}[/$]?
  back: |
    Time at which D stabilizes with refrence to the launching edge.
- type: markdown
  id: 6  # (generated)
  front: |
    What is the required time [$]\text{required time} = T + \delta_\text{skew} - t_\text{setup}[/$]?

    [[image: timing_flipflop.png]]
  back: |
    Latest time the data needs to stabilize for reliable capture with reference to the launching edge.
- type: markdown
  id: 7  # (generated)
  front: |
    How is setup slack computed?
  back: |
    Difference between the required time and the arrival time.
- type: markdown
  id: 8  # (generated)
  front: |
    Why should the data not arrive too fast?
  back: |
    The arrival should be *after* the hold time of the capture FF has passed (arrival time > required time).
- type: cloze
  id: 9  # (generated)
  front: |
    Positive clock skews are good for {{c1::fixing setup violations}}
- type: cloze
  id: 10  # (generated)
  front: |
    Negative clock skew can guard against {{c1::hold violation}}, but can cause {{c1:setup violation}}
- type: cloze
  id: 11  # (generated)
  front: |
    A circuit with setup violation can work at a {{c1::lower frequency}}.
- type: cloze
  id: 12  # (generated)
  front: |
    A circuit with hold violation will {{c1::not work at all}}.
- type: markdown
  id: 13  # (generated)
  front: |
    How are constraints provided for the synthesis tool?
  back: |
    `.xdc` or `.sdc` file
- type: markdown
  id: 14  # (generated)
  front: |
    What is the `create_clock` function?
  back: |
    Tells the tool the clock frequency we are targeting
- type: markdown
  id: 15  # (generated)
  front: |
    Explain the following command:

    ```
    create_clock -add -name sys_clk_pin -period 10.00 -waveform {0 5} [get_ports clk]
    ```
  back: |
    - Create clock named `sys_clk_pin`
    - 10ns period
    - 50% duty cycle: 0 is the low time, and 5 the high time.
    - clock signal is expected to come from `clk` port
- type: markdown
  id: 16  # (generated)
  front: |
    Explain the following command:

    ```
    set_false_path -through [get_pins mux1/I0] -through [get_pins mux2/I0]
    ```
  back: |
    Specifies paths not considered for timing analysis.
    - `-through [get_pins mux1/I0]`: Applies the constraint to signals passing through pin I0 of instance mux1.
    - `-through [get_pins mux2/I0]`: Further extends the false path to signals that also pass through pin I0 of instance mux2.
- type: markdown
  id: 17  # (generated)
  front: |
    What does `set_multicycle_path` do?
  back: |
    - Used for combinational operations which require more than 1 cycle

    [[image: constraints_multi_cycle.png]]
- type: markdown
  id: 18  # (generated)
  front: |
    What does `set_input_delay` and `set_output_delay` do?
  back: |-
    Used to set combinational delays for inputs and outputs

    [[image: constraints_delay.png]]
