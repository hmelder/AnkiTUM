title: 'GDB: Kapitel 4: Relationale Anfragesprachen'
author: AnkiTUM
id: 398573838

cards:
  # Fragen zu Datentypen

- type: markdown
  id: 0  # (generated)
  front: Was ist der Unterschied zwischen `character(n)` und `char varying(n)`
  back: |+
    - Zeichenketten vom Typ `character` immer Größe n
    - Abgespeicherte Größe kann bei `char varying` oder `varchar`variieren


- type: markdown
  id: 1  # (generated)
  front: Was ist die Bedeutung der Argumente von `numeric(p, s)`?
  back: |+
    - p: Die Gesamtzahl der gespeicherten Stellen
    - s: Nachkommastellen


- type: markdown
  id: 2  # (generated)
  front: Was ist der Datentyp für Fixkommazahlen in SQL?
  back: |
    `numeric(p, s)`


- type: markdown
  id: 3  # (generated)
  front: Was ist der Datentyp für Gleitkommazahlen in SQL?
  back: |
    `float`


- type: markdown
  id: 4  # (generated)
  front: Was ist der Datentyp für Integers in SQL?
  back: |
    `int` oder `integer`


- type: markdown
  id: 5  # (generated)
  front: Nenne einen Datentyp für die Abspeicherung von (großen) binären Daten
  back: |
    `blob` oder `raw`
  # Fragen zu DML (Data Manipulation Language)


- type: markdown
  id: 6  # (generated)
  front: Wie kann eine neue Relation in SQL erstellt werden?
  back: |+
    ```
      create table <NAME>
      ( (<ATTRIBUTE> <TYPE> <INTEGRITY_CONSTRAINT>)+ );
    ```

    Dabei `+` für ein, oder mehrere Attribute in der Liste.


- type: markdown
  id: 7  # (generated)
  front: |
    Wir wollen zu der Relation `Professoren` das Attribut `Raum`, wobei die
    Raumnummer eine ganze Zahl ist, hinzufügen.
  back: |+
    ```
      alter table Professoren
        add (Raum integer);
    ```

    Und in SQL-92:
    ```
      alter table Professoren
        add column (Raum integer);
    ```


- type: markdown
  id: 8  # (generated)
  front: Wie kann der Datentyp eines Attributs einer Relation geändert werden?
  back: |+
    ```
      alter table <NAME>
        modify (<ATTRIBUTE> <TYPE>);
    ```

    Und in SQL-92:
    ```
      alter table <NAME>
        alter column (<ATTRIBUTE> <TYPE>);
    ```


- type: markdown
  id: 9  # (generated)
  front: Welche (in der Vorlesung vorgestellte) Aggregatfunktionen gibt es in SQL?
  back: |+
    - `avg`: Bestimmung des Durchschnitts einer Menge von Zahlen
    - `max` und `min`: Zur Bestimmung des größten bzw. kleinsten Elementes
    - `sum`: Bildung der Summe
    - `count`: Anzahl der Zeilen in einer Tabelle


- type: markdown
  id: 10  # (generated)
  front: Was ist bei Verwendung von `GROUP BY` in der `SELECT` Klausel zu beachten?
  back: |+
    Da in der Ausgaberelation jede Gruppe nur durch ein einzelnes Tupel repräsentiert
    wird, können in der `SELECT`-Klausel **nur Aggregatfunktionen vorkommen, oder Attribute
    nach denen gruppiert wurde**. Also Attribute, die auch in der `GROUP BY` Klausel verwendet
    wurden.


- type: markdown
  id: 11  # (generated)
  front: Was ist das Ergebnis von `NULL + 1`?
  back: 'NULL'


- type: markdown
  id: 12  # (generated)
  front: Was ist das Ergebnis von `NULL*0`?
  back: 'NULL'


- type: markdown
  id: 13  # (generated)
  front: SQL hat eine dreiwertige Logik. Nenne alle drei Werte.
  back: true, false, unknown


- type: markdown
  id: 14  # (generated)
  front: Was passiert, wenn in einem arithmetischen Ausdruck ein NULL-Wert vorkommt?
  back: |+
    Der NULL-Wert wird propagiert, d.h sobald ein Operand NULL ist, wird auch das
    Ergebnis NULL.


- type: markdown
  id: 15  # (generated)
  front: Ergebnis von `unknown AND true`
  back: unknown


- type: markdown
  id: 16  # (generated)
  front: Ergebnis von `false OR unknown`
  back: |+
    `unknown`


- type: markdown
  id: 17  # (generated)
  front: Ergebnis von `true OR unknown`
  back: |-
    `true`

- type: markdown
  id: 18  # (generated)
  front: Wie verändert / löscht man Tupel?
  back: |+
    - update [COLUMN] set [VALUE]
    - delete [COLUMN]


- type: markdown
  id: 19  # (generated)
  front: Wie kann bei einer SELECT anfrage die sortierung bestimmt werden?
  back: |+
    - order by [COLUMN]
    - mit asc/desc kann die Reihenfolge bestimmt werden
    - es können mehrere mit komma getrennte Spalten und Reihenfolgen angegeben werden


- type: markdown
  id: 20  # (generated)
  front: Wie können doppelte elemente bei einer Select anfrage ignoriert werden?
  back: mit distinct [COLUMN]


- type: markdown
  id: 21  # (generated)
  front: Wie kann eine Tabelle umbenannt werden?
  back: mit "as", z.b. select a, b as AB from C


- type: markdown
  id: 22  # (generated)
  front: Was ist die Syntax für eine rekursive Anfrage (rekursive CTE)?
  back: |+
    ```
    WITH RECURSIVE cte_name (column1, column2, ...) AS (
      -- Nicht rekursiver "seed"
      SELECT column1, column2, ...
      FROM your_table
      WHERE condition

      UNION ALL

      -- Recursives select
      SELECT column1, column2, ...
      FROM cte_name
      WHERE condition
    )
    ```


- type: markdown
  id: 23  # (generated)
  front: Wann terminieren rekursive queries?
  back: Wenn das rekursive Select statement eine leere Tabelle zurückgibt


- type: markdown
  id: 24  # (generated)
  front: Wie lassen sich generalisierungen in SQL modellieren?
  back: |+
    Mit views. Man erstellt eine View welche mehrere Tabellen Zusammenfasst.
    Z.b. Professoren -> Angestellte. Professoren erweitern Angestellte und haben einen Fremdschlüssel PersNr.

- type: markdown
  id: 25  # (generated)
  front: Was sind CTEs?
  back: Common Table Expressions. Temporäre Tabellen die mit WITH erstellt werden

- type: markdown
  id: 26  # (generated)
  front: Welchen Vorteil haben views verglichen mit CTEs?
  back: |+
    - Views werden persisted und geindexed -> bessere Performace und Reusability
    - Views können updatebar sein

- type: markdown
  id: 27  # (generated)
  front: Welchen Sicherheitsvorteil haben views?
  back: Abkapselung von Daten. Die view kann nur Daten enthalten welche für den user
    relevant sind. Alle anderen sind für den user unsichtbar

